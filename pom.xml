<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>Java_Autotest_Template</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!--config-->
        <video.enabled>true</video.enabled>
        <selenoid.url>http://0.0.0.0:4444/wd/hub</selenoid.url>
        <base.url>url</base.url>


        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>

        <!-- maven start -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
        <!-- maven end -->

        <!-- JUnit start -->
        <junit.jupiter.version>5.4.2</junit.jupiter.version>
        <!-- JUnit end -->

        <!-- Allure start -->
        <aspectj.version>1.9.1</aspectj.version>
        <allure.version>2.13.5</allure.version>
        <!-- Allure end -->
    </properties>

    <dependencies>
        <!-- JUnit start -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- JUnit end -->

        <!-- selenide start -->
        <dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>selenide</artifactId>
            <version>5.14.2</version>
            <scope>test</scope>
        </dependency>
        <!-- selenide end -->

        <!-- Allure start -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-selenide</artifactId>
            <version>${allure.version}</version>
        </dependency>
        <!-- Allure end -->

        <!-- Allure start -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>2.12.1</version>
            <scope>test</scope>
        </dependency>
        <!-- Allure end -->

        <!-- log4j start -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- log4j end -->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- maven start -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <!-- maven end -->

                <!-- Allure start -->
                <!-- AspectJ is needed to process some annotation like @Attachment etc.-->
                <configuration>
                    <argLine>
                        -Dfile.encoding=UTF-8
                        -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
                    </argLine>
                    <systemPropertyVariables>
                        <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
                        <video.enabled>${video.enabled}</video.enabled>
                        <selenoid.url>${selenoid.url}</selenoid.url>
                        <base.url>${base.url}</base.url>
                    </systemPropertyVariables>

                    <useSystemClassLoader>false</useSystemClassLoader><!-- circleci workaround!!! -->
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
                <!-- Allure end -->
            </plugin>

            <!-- Allure start -->
            <!-- This is optional. It enables mvn goals: allure:serve allure:report -->
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.10.0</version>
                <!-- If you don't define report version the plugin will work, but may use the older one.-->
                <configuration>
                    <reportVersion>${allure.version}</reportVersion>
                    <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
                </configuration>
            </plugin>
            <!-- Allure end -->
        </plugins>

    </build>


</project>